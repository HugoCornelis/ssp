#!/usr/bin/perl -w
#!/usr/bin/perl -d:ptkdb -w
#

use strict;


$| = 1;


BEGIN
{
    #! make check

    push @INC, '../perl';

    #! make distcheck

    push @INC, '../../perl';

    #! normal run

    push @INC, './perl';

    #! after install

    push @INC, '/usr/local/glue/swig/perl';
}


use SSP;


$SIG{__DIE__}
    = sub {
	use Carp;

	confess @_;
    };

$ENV{NEUROSPACES_MODELS} = '/usr/local/neurospaces/models/library';


sub main
{
    # model specification array

    my $modelname = $0;

    $modelname =~ s/.*\///;

    $modelname =~ s/-/_/g;

    my $args = [ "$0", "-P", "tests/networks/$modelname.ndf" ];

    # instantiate a scheduler

    my $scheduler
	= SSP->new(
		   {
		    apply => {
			      simulation => [
					     {
					      arguments => [ 10, { verbose => 2, }, ],
					      method => 'steps',
					     },
					     {
					      arguments => [ 0.1, ],
					      method => 'advance',
					     },
					    ],
			     },
		    models => [
			       {
				modelname => "/$modelname/source",
				solverclass => "heccer",
			       },
			      ],
		    name => $modelname,
		    outputclasses => {
				      double_2_ascii => {
							 module_name => 'Heccer',
							 package => 'Heccer::Output',
							},
				     },
		    outputs => [
				{
				 component_name => "/$modelname/source/soma",
				 field => 'Vm',
				 outputclass => 'double_2_ascii',
				},
			       ],
		    services => {
				 neurospaces => {
						 initializers => [
								  {
								   arguments => [ $args, ],
								   method => 'read',
								  },
								 ],
						 module_name => 'Neurospaces',
						},
				 event_system => {
						  initializers => [
								   {
								    arguments => [],
								    method => 'add_distributor',
								   },
								   {
								    arguments => [],
								    method => 'add_queuer',
								   },
								  ],
						  module_name => 'Heccer',
						  package => 'Heccer::DES',
						 },
				},
		    solverclasses => {
				      heccer => {
						 module_name => 'Heccer',
						 service_name => 'neurospaces',
						},
				     },
		   },
		  );

    use YAML;

    my $scheduler_yaml;

    {
	local $/;

	if (-e "./yaml/$modelname.yml")
	{
	    $scheduler_yaml = Load(`cat ./yaml/$modelname.yml`);
	}
    }

    # run the schedule

    $scheduler->run();
}


main();


exit 0;


